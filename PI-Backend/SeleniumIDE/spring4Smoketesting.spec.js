// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Spring 4 - Smoke testing', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Happy path register client (Change each time email input)', async function() {
    await driver.get("http://127.0.0.1:5173/home")
    await driver.manage().window().setRect({ width: 1372, height: 806 })
    await driver.findElement(By.css(".\\_btn_vgjs1_115:nth-child(2) > span")).click()
    await driver.findElement(By.name("password")).sendKeys("contra1234")
    await driver.findElement(By.name("name")).click()
    await driver.findElement(By.name("name")).sendKeys("Jhonatan")
    await driver.findElement(By.name("lastName")).sendKeys("Escobar")
    await driver.findElement(By.name("email")).click()
    await driver.findElement(By.name("email")).sendKeys("test99999@gmail.com")
    await driver.findElement(By.name("password")).click()
    await driver.findElement(By.css(".\\_form_Container_1ftgl_15")).click()
    await driver.findElement(By.name("repeatedpass")).click()
    await driver.findElement(By.name("repeatedpass")).sendKeys("contra1234")
    await driver.findElement(By.css(".\\_btn_1ftgl_65")).click()
    await driver.wait(until.elementLocated(By.xpath("//span[contains(.,\'J\')]")), 30000)
    await driver.findElement(By.linkText("Logout")).click()
    await driver.close()
  })
  it('Happy path login admin user', async function() {
    await driver.get("http://127.0.0.1:5173/home")
    {
      const elements = await driver.findElements(By.xpath("//span[contains(.,\'Login\')]"))
      assert(elements.length)
    }
    await driver.findElement(By.css(".\\_btn_vgjs1_115:nth-child(1) > span")).click()
    await driver.findElement(By.name("email")).sendKeys("test77@gmail.com")
    await driver.findElement(By.name("password")).sendKeys("contra1234")
    await driver.findElement(By.css(".\\_btn_1s4b4_61")).click()
    await driver.wait(until.elementLocated(By.xpath("//h2[contains(.,\'Hola Jhonatan\')]")), 30000)
    await driver.findElement(By.linkText("Logout")).click()
    await driver.close()
  })
  it('Happy path create a car', async function() {
    await driver.get("http://127.0.0.1:5173/home")
    await driver.manage().window().setRect({ width: 1372, height: 806 })
    await driver.findElement(By.css(".\\_btn_vgjs1_115:nth-child(1) > span")).click()
    await driver.findElement(By.name("email")).sendKeys("test999@gmail.com")
    await driver.findElement(By.name("password")).sendKeys("contra1234")
    await driver.findElement(By.name("email")).click()
    await driver.findElement(By.name("email")).sendKeys("test77@gmail.com")
    await driver.findElement(By.css(".\\_btn_1s4b4_61")).click()
    await driver.findElement(By.css(".\\_login_vgjs1_285 > svg")).click()
    await driver.findElement(By.name("cName")).click()
    await driver.findElement(By.name("cName")).sendKeys("Carro")
    await driver.findElement(By.name("cCategory")).click()
    {
      const dropdown = await driver.findElement(By.name("cCategory"))
      await dropdown.findElement(By.xpath("//option[. = 'Standard']")).click()
    }
    await driver.findElement(By.name("cCity")).click()
    {
      const dropdown = await driver.findElement(By.name("cCity"))
      await dropdown.findElement(By.xpath("//option[. = 'Medellin']")).click()
    }
    await driver.findElement(By.name("cDescription")).click()
    await driver.findElement(By.name("cDescription")).sendKeys("Description")
    await driver.findElement(By.css(".\\_textarea_description_jinjo_191 > label")).click()
    await driver.findElement(By.name("cFeaturesToAdd")).click()
    {
      const dropdown = await driver.findElement(By.name("cFeaturesToAdd"))
      await dropdown.findElement(By.xpath("//option[. = 'Air Bags:2']")).click()
    }
    await driver.findElement(By.css(".\\_cont_add_button_jinjo_329:nth-child(2) > .\\_add_button_jinjo_343")).click()
    {
      const element = await driver.findElement(By.css(".\\_cont_add_button_jinjo_329:nth-child(2) > .\\_add_button_jinjo_343"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.name("cFeaturesToAdd")).click()
    {
      const dropdown = await driver.findElement(By.name("cFeaturesToAdd"))
      await dropdown.findElement(By.xpath("//option[. = 'A/C:Yes']")).click()
    }
    await driver.findElement(By.css(".\\_cont_add_button_jinjo_329:nth-child(2) > .\\_add_button_jinjo_343:nth-child(1)")).click()
    {
      const element = await driver.findElement(By.css(".\\_cont_add_button_jinjo_329:nth-child(2) > .\\_add_button_jinjo_343:nth-child(1)"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.name("cPoliciesId")).click()
    {
      const dropdown = await driver.findElement(By.name("cPoliciesId"))
      await dropdown.findElement(By.xpath("//option[. = '1']")).click()
    }
    await driver.findElement(By.name("cImagesToAdd")).click()
    await driver.findElement(By.name("cImagesToAdd")).sendKeys("Url imagen")
    await driver.findElement(By.name("cTitleImg")).click()
    await driver.findElement(By.name("cTitleImg")).sendKeys("titulo")
    await driver.findElement(By.css(".\\_cont_add_button_jinjo_329:nth-child(3) > .\\_add_button_jinjo_343")).click()
    {
      const element = await driver.findElement(By.css(".\\_cont_add_button_jinjo_329:nth-child(3) > .\\_add_button_jinjo_343"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.css(".\\_buttonSubmit_jinjo_503")).click()
    await driver.findElement(By.css(".swal2-confirm")).click()
    await driver.wait(until.elementLocated(By.css("g > path:nth-child(2)")), 30000)
    await driver.findElement(By.linkText("Logout")).click()
    await driver.close()
  })
  it('Happy path Booking on a random car (needs to check if 27-28 days arent reserved)', async function() {
    await driver.get("http://127.0.0.1:5173/home")
    await driver.manage().window().setRect({ width: 1372, height: 807 })
    await driver.findElement(By.css(".\\_btn_vgjs1_115:nth-child(1) > span")).click()
    await driver.findElement(By.name("email")).sendKeys("test999@gmail.com")
    await driver.findElement(By.name("password")).sendKeys("contra1234")
    await driver.findElement(By.css(".\\_btn_1s4b4_61")).click()
    {
      const element = await driver.findElement(By.css(".\\_btn_1s4b4_61"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.linkText("Details")).click()
    await driver.executeScript("window.scrollTo(0,239.1999969482422)")
    await driver.findElement(By.css("div:nth-child(2) > .rmdp-week:nth-child(6) > .rmdp-day:nth-child(5) > .sd")).click()
    await driver.findElement(By.css(".\\_cont_reserve_calendar_1jv6u_273 > button")).click()
    await driver.executeScript("window.scrollTo(0,848.7999877929688)")
    await driver.findElement(By.css("div:nth-child(2) > .rmdp-week:nth-child(6) > .rmdp-day:nth-child(6) > .sd")).click()
    await driver.findElement(By.css(".rmdp-week:nth-child(6) > .rmdp-day:nth-child(7) > .sd")).click()
    await driver.findElement(By.css("select")).click()
    {
      const dropdown = await driver.findElement(By.css("select"))
      await dropdown.findElement(By.xpath("//option[. = '04:00']")).click()
    }
    await driver.findElement(By.css("div:nth-child(2) > .rmdp-week:nth-child(6) > .rmdp-day:nth-child(5) > .sd")).click()
    await driver.findElement(By.css("div:nth-child(2) > .rmdp-week:nth-child(6) > .rmdp-day:nth-child(6) > .sd")).click()
    await driver.findElement(By.id("_formCity_1qgsk_1")).click()
    await driver.findElement(By.id("_formCity_1qgsk_1")).sendKeys("medellin")
    await driver.findElement(By.css("button:nth-child(5)")).click()
    await driver.findElement(By.css(".swal2-confirm")).click()
    await driver.executeScript("window.scrollTo(0,376.79998779296875)")
    await driver.findElement(By.linkText("Logout")).click()
    {
      const element = await driver.findElement(By.css(".\\_btn_vgjs1_115:nth-child(2) > span"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.wait(until.elementLocated(By.xpath("//span[contains(.,\'Login\')]")), 30000)
    await driver.close()
  })
  it('Check correct redirection if not logged', async function() {
    await driver.get("http://127.0.0.1:5173/home")
    await driver.manage().window().setRect({ width: 1372, height: 806 })
    await driver.findElement(By.xpath("//img[contains(@src,\'https://images-grupo4-easycar.s3.us-east-2.amazonaws.com/Categoy_images/suv.jpg\')]")).click()
    await driver.findElement(By.css(".\\_card_1682z_21:nth-child(2) .\\_a_1682z_173")).click()
    await driver.executeScript("window.scrollTo(0,240)")
    await driver.findElement(By.css(".\\_cont_reserve_calendar_1jv6u_273 > button")).click()
    await driver.wait(until.elementLocated(By.xpath("//h4[contains(.,\'Please sign in to reserve a car\')]")), 30000)
    await driver.findElement(By.css(".\\_logo_vgjs1_47")).click()
    {
      const element = await driver.findElement(By.css(".\\_logo_vgjs1_47"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.close()
  })
})
